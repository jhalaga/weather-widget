name: Build and Release APK

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to release'
        required: true
        default: 'v3.1'

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-22.04
    
    env:
      # Clear any potentially conflicting Java environment variables
      JAVA_HOME_11_X64: ""
      JAVA_HOME_17_X64: ""
      JAVA_HOME_21_X64: ""
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Verify Java setup
      run: |
        echo "JAVA_HOME: $JAVA_HOME"
        echo "Java version:"
        java -version
        echo "Javac version:"
        javac -version
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Clear Gradle configuration
      run: |
        rm -rf ~/.gradle/daemon
        ./gradlew --stop || true
        
    - name: Build Release APK
      run: |
        export JAVA_HOME="$JAVA_HOME"
        ./gradlew assembleRelease --no-daemon --warning-mode all --info
      env:
        GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8"
        
    - name: List APK files (debug)
      run: |
        echo "Checking APK output directory..."
        ls -la app/build/outputs/apk/release/ || echo "Release directory not found"
        find . -name "*.apk" -type f || echo "No APK files found"
        
    - name: Rename APK
      run: |
        if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
          mv app/build/outputs/apk/release/app-release-unsigned.apk weather-widget-${{ github.event.release.tag_name || inputs.version }}.apk
        elif [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
          mv app/build/outputs/apk/release/app-release.apk weather-widget-${{ github.event.release.tag_name || inputs.version }}.apk
        else
          echo "No APK file found to rename"
          exit 1
        fi
        
    - name: Upload APK to Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: ./weather-widget-${{ github.event.release.tag_name }}.apk
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: weather-widget-${{ github.event.release.tag_name || inputs.version }}
        path: ./weather-widget-${{ github.event.release.tag_name || inputs.version }}.apk 